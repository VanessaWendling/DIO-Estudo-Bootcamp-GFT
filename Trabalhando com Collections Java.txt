Visão Geral
- Collection é um objeto que agrupa múltiplos elementos (variáveis
primitivas ou objetos) dentro de uma única unidade.
- Serve para armazer e processar conjunjuntos de dados.

- Composição Collections
-- Interfaces: um contrato que quando assumido por uma classe deve
	ser implementado.
-- Implementações ou Classes: são as materializações, a codificação
	das interfaces.
-- Algoritmos: sequência lógica, finita e definida de instruções que
	devem ser seguidas para resolver um problema.
-----------------------------------------------------------------------------
Lists
- java.util.List
- permite elementos duplicados e garante ordem de inserção
- ArrayList X LinkedList
-- ArrayList deve ser usado onde mais operações de pesquisa são necessárias,
e LinkedList deve ser usado onde tem mais operaçãoeos de inserção e exclusão.
-----------------------------------------------------------------------------
Set
- java.util.Set
- não permite elementos duplicados
- não possui índice
- HashSet X LinkedHashSet X TreeSet
-- HashSet não mantém a ordem de inserção dos objetos, já a LinkedHashSet mantém
 e a TreeSet mantém a ordem natural, ou seja ordenado.

OBS.: importante sobreescrever os métodos equals e hashCode na utilização dos Hash
-----------------------------------------------------------------------------
Map
- java.util.Map
- elementos únicos (key) para cada valor(value)
- não estende de Collection
- TreeMap: organização, ordenação
- HashMap e o LinkedHashMap permitem chaves nulas e o TreeMap não

OBS.: importante sobreescrever os métodos equals e hashCode na utilização dos Hash
-----------------------------------------------------------------------------
Stream
- Classe Anônima: classe que não recebeu nome e é tanto declarado e instanciado em
	uma única instrução. É instanciado apenas uma vez.
- Interface Funcional: qualquer interface com um SAM (Single Abstract Method ) é uma
	interface funcional e sua implementação pode ser tratada como expressão lambda.
	-- Comparator, Consumer, Function, Predicate
- Lambda: função sem declaração, isto é, não é necessário colocar um nome, tipo de retorno
	e o modificador de acesso. (argumento) -> (corpo).
- Reference Method: permite fazer referência a um método ou construtor de uma classe de forma
	funcional) e assim indicar que ele deve ser utilizado num porto específico do código,
	deixando-o mais simples e legível. Para utilizá=lo, basta informar uma classe ou referência
	seguida do símbolo "::" e o nome do método sem parênteses no final.
	Simplificar uma expressão Lambda
- Streams API: traz uma nova opção para a manipulação de coleções em Java seguindo os princípios
	da programação funcional. Combinada com as expressões lambda, ela proporciona uma forma
	diferente de lidar com conjuntos de elementos, oferecendo ao dev uma maneira simples e 
	concisa de escrever código que resulta em facilidade de manutenção e paralelização sem 
	efeitos indesejados em tempo de execução.